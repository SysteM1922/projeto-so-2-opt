timeout = 60
r = 3

@bestNeighbour1

C: 8
Best solution: [18 53 78 83 111 129 184 97], cost: 9766.000000
---------------------------------------
C: 10
Best solution: [15 18 31 53 78 83 97 129 184 111], cost: 8737.000000
---------------------------------------
C: 12
Best solution: [18 32 36 45 50 67 78 83 112 146 184 97], cost: 6990.000000


---------------------------------------


@bestNeighbour2

C: 8
Best solution: [18 53 76 90 146 184 188 78], cost: 10616.000000
---------------------------------------
C: 10
Best solution: [15 18 31 53 76 90 146 184 188 78], cost: 9523.000000
---------------------------------------
C: 12
Best solution: [26 30 31 36 64 66 78 90 146 184 188 104], cost: 7235.000000


---------------------------------------


AdaptiveSearch (different from above)
r = 3
C: 8
Best solution: [83 97 111 78 129 184 53 18], cost: 9766.000000
---------------------------------------
C: 10
Best solution: [18 111 83 78 15 31 97 129 53 184], cost: 8737.000000
---------------------------------------
C: 12
Best solution: [18 103 146 150 93 154 53 104 117 76 78 101], cost: 3108.000000
---------------------------------------

r = 5
C: 8
Best solution: [118 53 18 96 76 140 184 78], cost: 8665.000000
---------------------------------------
C: 10
Best solution: [18 129 184 83 111 15 78 53 97 31], cost: 8737.000000
---------------------------------------
C: 12
Best solution: [18 101 146 150 154 117 104 53 78 76 93 103], cost: 3108.000000
---------------------------------------